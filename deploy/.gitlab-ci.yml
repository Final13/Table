include:
  - project: devops/ci
    file: /actions/index.yml
stages:
  - build 
  - docker 
  - deploy

build_api:
  extends:
    - .utils-before-script
  stage: build
  tags:
    # - debug_build
    - build
  image: lskjs/node:20.2.0-alpine
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .pnpm-store
    policy: pull
  artifacts:
    paths:
      - ./apps/api/.release
      - ./apps/api/lib
  variables:
    CWD: apps/api
  script:
    - pnpm install
    - pnpm build
    - pnpm -F "." deploy .release

build_web:
  extends:
    - .utils-before-script
  stage: build
  tags:
    # - debug_build
    - build
  image: lskjs/node:20.2.0-alpine
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .pnpm-store
    policy: pull
  artifacts:
    paths:
      - apps/web/.release
      - apps/web/lib
  variables:
    CWD: apps/web
  script:
    - pnpm install
    - pnpm build
    - pnpm -F "." deploy .release
    
docker_api:
  extends:
    - .docker
  variables:
    CWD: apps/api
    DOCKER_IMAGE: ${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/api:${CI_COMMIT_SHORT_SHA}
    DOCKER_IMAGE_TAG: ${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/api:${CI_COMMIT_REF_NAME}

docker_api_do:
  stage: docker
  tags: [docker]
  image: lskjs/dind
  extends: .docker-utils-before-script
  script:
    # - log docker login -u ${DOCKER_REGISTRY_USER} -p ${DOCKER_REGISTRY_PASS} ${DOCKER_REGISTRY}
    - echo ${DO_DOCKER_REGISTRY_PASS} | log docker login -u ${DO_DOCKER_REGISTRY_USER} --password-stdin ${DO_DOCKER_REGISTRY}
    - log docker build -t ${DO_DOCKER_REGISTRY}/ga2mer/api:${CI_COMMIT_SHORT_SHA} ${DOCKER_FILE}
    - docker tag ${DO_DOCKER_REGISTRY}/ga2mer/api:${CI_COMMIT_SHORT_SHA} ${DO_DOCKER_REGISTRY}/ga2mer/api:${CI_COMMIT_REF_NAME}
    - docker push ${DO_DOCKER_REGISTRY}/ga2mer/api:${CI_COMMIT_SHORT_SHA}
    - docker push ${DO_DOCKER_REGISTRY}/ga2mer/api:${CI_COMMIT_REF_NAME}
  variables:
    CWD: apps/api
    DOCKER_IMAGE: ${DO_DOCKER_REGISTRY}/ga2mer/api:${CI_COMMIT_SHORT_SHA}
    DOCKER_IMAGE_TAG: ${DO_DOCKER_REGISTRY}/ga2mer/api:${CI_COMMIT_REF_NAME}

docker_web_do:
  stage: docker
  tags: [docker]
  image: lskjs/dind
  extends: .docker-utils-before-script
  script:
    # - log docker login -u ${DOCKER_REGISTRY_USER} -p ${DOCKER_REGISTRY_PASS} ${DOCKER_REGISTRY}
    - echo ${DO_DOCKER_REGISTRY_PASS} | log docker login -u ${DO_DOCKER_REGISTRY_USER} --password-stdin ${DO_DOCKER_REGISTRY}
    - log docker build -t ${DO_DOCKER_REGISTRY}/ga2mer/web:${CI_COMMIT_SHORT_SHA} ${DOCKER_FILE}
    - docker tag ${DO_DOCKER_REGISTRY}/ga2mer/web:${CI_COMMIT_SHORT_SHA} ${DO_DOCKER_REGISTRY}/ga2mer/web:${CI_COMMIT_REF_NAME}
    - docker push ${DO_DOCKER_REGISTRY}/ga2mer/web:${CI_COMMIT_SHORT_SHA}
    - docker push ${DO_DOCKER_REGISTRY}/ga2mer/web:${CI_COMMIT_REF_NAME}
  variables:
    CWD: apps/web
    DOCKER_IMAGE: ${DO_DOCKER_REGISTRY}/ga2mer/web:${CI_COMMIT_SHORT_SHA}
    DOCKER_IMAGE_TAG: ${DO_DOCKER_REGISTRY}/ga2mer/web:${CI_COMMIT_REF_NAME}

docker_web:
  extends:
    - .docker
  variables:
    CWD: apps/web
    DOCKER_IMAGE: ${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/web:${CI_COMMIT_SHORT_SHA}
    DOCKER_IMAGE_TAG: ${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/web:${CI_COMMIT_REF_NAME}

deploy:dev:
  extends:
    - .deploy-docker
  tags:
    - deploy
    - prod
  variables:
    STAGE: dev
    DOCKER_IMAGE_API: ${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/api:${CI_COMMIT_SHORT_SHA}
    DOCKER_IMAGE_WEB: ${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/web:${CI_COMMIT_SHORT_SHA}
    DOCKER_STACK: ./deploy/docker-stack.yml
    DOCKER_SERVICE: dev_kit
    VIRTUAL_HOST: (Host(`dev-kit.chatterfy.ai`))
  environment:
    name: dev
  when: manual
  only:
    - develop

deploy:prod:
  extends:
    - .deploy-docker
  tags:
    - deploy
    - prod
  variables:
    STAGE: prod
    DOCKER_IMAGE_API: ${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/api:${CI_COMMIT_SHORT_SHA}
    DOCKER_IMAGE_WEB: ${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/web:${CI_COMMIT_SHORT_SHA}
    DOCKER_STACK: ./deploy/docker-stack.yml
    DOCKER_SERVICE: prod_kit
    VIRTUAL_HOST: (Host(`kit.chatterfy.ai`))
  environment:
    name: prod
  when: manual
  only:
    - master

deploy:prod:manual:
  extends:
    - .deploy-docker
  tags:
    - deploy
    - prod
  variables:
    STAGE: prod
    DOCKER_IMAGE_APP: ${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/app:${CI_COMMIT_SHORT_SHA}
    DOCKER_IMAGE_API: ${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/api:${CI_COMMIT_SHORT_SHA}
    DOCKER_IMAGE_WEB: ${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/web:${CI_COMMIT_SHORT_SHA}
    DOCKER_STACK: ./deploy/docker-stack.yml
    DOCKER_SERVICE: prod_kit
    VIRTUAL_HOST: (Host(`kit.chatterfy.ai`))
  environment:
    name: prod
  when: manual
  except:
    - master

deploy:k8s_prod:manual:
  stage: deploy
  extends: .docker-utils-before-script
  image:
    name: ga2mer/kubectl:1.27-debian11
    entrypoint: [""]
  tags:
    - docker
  script:
    - kubectl cluster-info
    - kubectl create secret generic prod-kit --from-file=${prod_env_file} --from-file=${prod_env_js} --save-config --dry-run=client -o yaml | kubectl apply -f -
    - envsubst < deploy/k8s-deploy.yaml > deploy.yaml.${CI_COMMIT_SHORT_SHA}
    - kubectl apply -f ./deploy.yaml.${CI_COMMIT_SHORT_SHA}
  variables:
    STAGE: prod
    APP_NAME: kit3
    DOCKER_IMAGE_APP: ${DO_DOCKER_REGISTRY}/ga2mer/app:${CI_COMMIT_SHORT_SHA}
    DOCKER_IMAGE_API: ${DO_DOCKER_REGISTRY}/ga2mer/api:${CI_COMMIT_SHORT_SHA}
    DOCKER_IMAGE_WEB: ${DO_DOCKER_REGISTRY}/ga2mer/web:${CI_COMMIT_SHORT_SHA}
    DOCKER_SERVICE: prod_kit
    VIRTUAL_HOST: (Host(`kit.chatterfy.ai`))
  environment:
    name: prod
  when: manual
  only:
    - master

